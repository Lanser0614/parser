
import requests
from bs4 import BeautifulSoup
import pymysql
import time
from selenium import webdriver
import time

con = pymysql.connect(host='127.0.0.1', user='root', passwd='root', db='kattabozor')
start_time = time.time()
PATH = r"C:\Работа\Парсинг\geckodriver.exe"

driver = webdriver.Firefox(executable_path=r"C:\Работа\Парсинг\geckodriver.exe")

def selenka(driver):
    for j in range(13000):
        cur = con.cursor()
        cur.execute("SELECT name FROM products where parsed = 0;")
        row = cur.fetchone()
        print(row)
        driver.get(f"https://www.google.com/search?q=  olcha.uz {row[0]}")
        html = driver.page_source
        soup = BeautifulSoup(html, features="lxml")
        try:
            rows = soup.find_all('div', {'class': "g"})
            for i in range(0, 5):
                href = rows[i].select("div>div>a")
                href = href[0]['href']
                if 'olcha.uz/product' in href:
                    href = href.replace('https://www.olcha.uz/product/view/', '').replace('https://olcha.uz/product/view/', '')
                    print(row[0])
                    cur.execute(f"UPDATE products SET olcha_url='{href}', parsed=1 WHERE name='{row[0]}';")
                    print("The query affected {} rows".format(cur.rowcount))
                    con.commit()
                    break
                else:
                    cur.execute(f"UPDATE products SET olcha_url='Не найден', parsed=1 WHERE name='{row[0]}';")
                    print("The query affected {} rows".format(cur.rowcount))
                    con.commit()
                    break
        except IndexError:
            print('Truble' ,row[0])
            cur.execute(f"UPDATE products SET olcha_url='Не найден', parsed=1 WHERE name='{row[0]}';")
            con.commit()
#       driver.close()
        time.sleep(60)
        
        


selenka(driver)


def get_category(con):
    url = 'https://www.kattabozor.uz/'
    req = requests.get(url)
    soup = BeautifulSoup(req.text, features="lxml")
    hrefs = []
    tables = soup.find_all('h2', {'class': "fs-20"})
    tables.pop()
    for child in tables:
        child = child.find("a", recursive=False)
        hrefs.append((child['href'].rstrip(), child.get_text(strip=True)))
    sql_insert = 'INSERT INTO category (href, name) VALUES (%s, %s)'
    cur = con.cursor()
    cur.executemany(sql_insert, hrefs)
    con.commit()


def get_products(con):
    c=0
    cur = con.cursor()
    cur.execute("SELECT href from kattabozor.category where parsed  = 0")
    href = cur.fetchone()
    if href[0] == '/category/mobilnye-telefony?inStock=true':
        for i in range(1, 99):
            req = requests.get(f'https://www.kattabozor.uz{href[0]}&page={i}')
            soup = BeautifulSoup(req.text, features="lxml")
            product_card = soup.select(".border-0")
            if not product_card:
                break
            else:
                for el in product_card:
                    name = str(el.select('.product-name>a')[0].get_text(strip=True))
                    name = name.replace("'", '`')
                    try:
                        merchant_name = el.select('.merchant-name')[0]
                        cur.execute(
                            f"UPDATE phone_urls SET product_url = '{el.select('.col-md-5>h5>.text-decoration-none')[0]['href']}' WHERE phone_name = '{name}';")
                    except IndexError:
                        try:
                            cur.execute(
                                f"UPDATE products SET price = '{el.select('.col-md-5>h5>b')[0].get_text(strip=True)}', anchor_key='{el.select('.product-name>a')[0]['href']}' WHERE name = '{name}' AND merchant='{el.select('.merchant-name')[0].get_text(strip=True)}';")
                        except IndexError:
                            continue
    else:
        for i in range(1, 99):
            req = requests.get(f'https://www.kattabozor.uz{href[0]}&page={i}')
            soup = BeautifulSoup(req.text, features="lxml")
            product_card = soup.select(".border-0")

            if not product_card:
                break
            else:
                for el in product_card:
                    c+=1
                    try:
                        name = el.select('.product-name>a')[0].get_text(strip=True)
                        name = str(name).replace("'", '`')
                        price = el.select('.col-md-5>h5>b')[0].get_text(strip=True)
                        merchant_name = el.select('.merchant-name')[0].get_text(strip=True)
                        unique_key = el.select('.product-name>a')[0]['href']
                        # unique_key = unique_key.replace('/', '')
                        cur.execute(f"UPDATE kattabozor.products SET price='{price}', anchor_key='{unique_key}' WHERE name = '{name}' AND merchant='{merchant_name}';")
                    except IndexError:
                        continue
    cur.execute(f"UPDATE kattabozor.category SET parsed = 1 where href = '{href[0]}'")
    print(c)
    con.commit()


def insert_phone(con):

    cur = con.cursor()
    cur.execute("SELECT product_url FROM phone_urls where parsed = 0;")
    row = cur.fetchone()
    print(row)
    req = requests.get(f'https://www.kattabozor.uz{row[0]}')
    soup = BeautifulSoup(req.text, features="lxml")
    phone_block = soup.select(".border-0")
    for el in phone_block:
        try:
            product_name = el.select('.product-name>a')[0].get_text(strip=True)
            product_name = product_name.replace("'", '')
            product_price = el.select('.col-md-5>h5>b')[0].get_text(strip=True)
            merchant_name = el.select('.merchant-name')[0].get_text(strip=True)
            unique_key = el.select('.product-name>a')[0]['href']
            cur.execute(f"INSERT INTO products (name, price, merchant, anchor_key) VALUES ('{product_name}', '{product_price}', '{merchant_name}', '{unique_key}') ON DUPLICATE KEY UPDATE price='{product_price}', anchor_key = '{unique_key}'")
        except IndexError:
            continue
    cur.execute(f"UPDATE kattabozor.phone_urls SET parsed = 1 where product_url = '{row[0]}'")
    con.commit()


# cur = con.cursor()
# cur.execute("UPDATE kattabozor.category SET parsed = 0")
# con.commit()

def google_query(con):
    cur = con.cursor()
    cur.execute("SELECT name FROM products where parsed = 0;")
    row = cur.fetchone()
    row = row[0].replace(" ", '+')
    print(row)
    print(f'https://duckduckgo.com/?q=olcha.uz '+row)
    req = requests.get(f'https://duckduckgo.com/?q=olcha.uz '+row)
    soup = BeautifulSoup(req.text, features="lxml")
    print(soup)
    block = soup.select('.result__a')

    for i in range(0, 3):
        href = block[i]['href']
        print(href)

    print(block)



def all(con):
    # get_products(con)
    # insert_phone(con)
    google_query(con)
# all(con)
print("--- %s seconds ---" % (time.time() - start_time))
